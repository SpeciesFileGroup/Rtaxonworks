% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tw_sources.R
\name{tw_sources}
\alias{tw_sources}
\title{Sources}
\usage{
tw_sources(
  author = NULL,
  exact_author = NULL,
  author_id = NULL,
  author_id_or = NULL,
  bibtex_type = NULL,
  citations = NULL,
  citation_object_type = NULL,
  documents = NULL,
  citations_on_otus = NULL,
  empty = NULL,
  not_empty = NULL,
  extend = NULL,
  global_identifiers = NULL,
  identifier = NULL,
  identifier_exact = NULL,
  identifier_start = NULL,
  identifier_end = NULL,
  ids = NULL,
  in_project = NULL,
  local_identifiers = NULL,
  match_identifiers = NULL,
  match_identifiers_delimiter = NULL,
  match_identifiers_type = NULL,
  nomenclature = NULL,
  notes = NULL,
  roles = NULL,
  serial = NULL,
  serial_id = NULL,
  source_type = NULL,
  tags = NULL,
  title = NULL,
  exact_title = NULL,
  query_term = NULL,
  user_id = NULL,
  user_target = NULL,
  user_date_start = NULL,
  user_date_end = NULL,
  venn = NULL,
  venn_mode = NULL,
  with_doi = NULL,
  with_title = NULL,
  topic_id = NULL,
  year_start = NULL,
  year_end = NULL,
  wildcard_attribute = NULL,
  abstract = NULL,
  address = NULL,
  annote = NULL,
  booktitle = NULL,
  chapter = NULL,
  copyright = NULL,
  crossref = NULL,
  doi = NULL,
  edition = NULL,
  editor = NULL,
  howpublished = NULL,
  institution = NULL,
  journal = NULL,
  key = NULL,
  language = NULL,
  language_id = NULL,
  month = NULL,
  note = NULL,
  number = NULL,
  organization = NULL,
  pages = NULL,
  publisher = NULL,
  school = NULL,
  series = NULL,
  stated_year = NULL,
  translator = NULL,
  type = NULL,
  url = NULL,
  verbatim = NULL,
  verbatim_contents = NULL,
  verbatim_keywords = NULL,
  volume = NULL,
  year_suffix = NULL,
  csv = FALSE,
  token = NULL,
  project_token = NULL,
  page = 0,
  per = 50,
  ...
)
}
\arguments{
\item{author}{(string) filter by author name}

\item{exact_author}{(boolean) filter by exact match on the author parameter}

\item{author_id}{(integer, vector) filter by one or more author IDs}

\item{author_id_or}{(boolean) filter by author ID with/without OR operator}

\item{bibtex_type}{(string, vector) filter by BibTeX type (e.g., article, book, inproceedings)}

\item{citations}{(boolean) filter by sources with/without citations}

\item{citation_object_type}{(string) filter by citation object type (AssertedDistribution, BiologicalAssociation, TaxonName, TaxonNameRelationship, TypeMaterial)}

\item{documents}{(boolean) filter by sources with/without documents attached}

\item{citations_on_otus}{(boolean) used with taxon_name_id to filter by sources with/without citations on the Otu}

\item{empty}{(string, vector) filter by an fields that should be empty (e.g., c("journal", "year") for records with no journal and year)}

\item{not_empty}{(string, vector) filter by an fields that should not be empty (e.g., c("journal", "year") for records with journal and year)}

\item{extend}{(string, vector) extend the response with additional information (e.g., documents, roles)}

\item{global_identifiers}{(boolean) filter by sources with/without global identifiers}

\item{identifier}{(string) filter by identifier}

\item{identifier_exact}{(boolean) filter by exact match on the identifier parameter}

\item{identifier_start}{(integer) filter by Identifier range start}

\item{identifier_end}{(integer) filter by Identfier range end}

\item{ids}{(integer, vector) filter by one or more source IDs (e.g., internal TaxonWorks IDs)}

\item{in_project}{(boolean) filter by sources in project}

\item{local_identifiers}{(boolean) filter by sources with/without local identifiers}

\item{match_identifiers}{(string) match identifiers with a delimited string of identifiers}

\item{match_identifiers_delimiter}{(string) the delimiter for the match_identifiers parameter}

\item{match_identifiers_type}{(string) the type of indentifiers to match (internal or identifier)}

\item{nomenclature}{(boolean) filter by sources with/without nomenclature}

\item{notes}{(boolean) filter by sources with/without notes}

\item{roles}{(boolean) filter by sources with/without roles}

\item{serial}{(boolean) filter by sources with/without a serial}

\item{serial_id}{(integer, vector) filter by one or more serial IDs}

\item{source_type}{(string) filter by source type (Source::Bibtex, Source::Human, or Source::Verbatim)}

\item{tags}{(boolean) filter by sources with/without tags}

\item{title}{(string) search on the title}

\item{exact_title}{(boolean) filter by exact match on the title parameter}

\item{query_term}{(string) search on the full citation}

\item{user_id}{(integer) filter by user ID}

\item{user_target}{(string) use with user_id to filter on records that were created or updated (created, updated)}

\item{user_date_start}{(string) filter by user date start (e.g., 2019-01-01)}

\item{user_date_end}{(string) filter by user date end (e.g., 2019-01-20)}

\item{venn}{(string) filter with json or browser URL of a query}

\item{venn_mode}{(string) the mode of the venn filter: exclude (a), intersect (ab), inverse exclude (b)}

\item{with_doi}{(boolean) filter by sources with/without a DOI}

\item{with_title}{(boolean) filter by sources with/without BibTeX title}

\item{topic_id}{(integer, vector) filter by topic ID}

\item{year_start}{(integer) filter by year start}

\item{year_end}{(integer) filter by year end}

\item{wildcard_attribute}{(string, vector) filter by wildcard_attribute (e.g., any of the below fields abstract through year_suffix)}

\item{abstract}{(string) filter by wildcard_attribute on abstract}

\item{address}{(string) filter by wildcard_attribute on address}

\item{annote}{(string) filter by wildcard_attribute on annote}

\item{booktitle}{(string) filter by wildcard_attribute on booktitle}

\item{chapter}{(string) filter by wildcard_attribute on chapter}

\item{copyright}{(string) filter by wildcard_attribute on copyright}

\item{crossref}{(string) filter by wildcard_attribute on crossref}

\item{doi}{(string) filter by wildcard_attribute on DOI}

\item{edition}{(string) filter by wildcard_attribute on edition}

\item{editor}{(string) filter by wildcard_attribute on editor}

\item{howpublished}{(string) filter by wildcard_attribute on howpublished}

\item{institution}{(string) filter by wildcard_attribute on institution}

\item{journal}{(string) filter by wildcard_attribute on journal}

\item{key}{(string) filter by wildcard_attribute on key}

\item{language}{(string) filter by wildcard_attribute on language}

\item{language_id}{(integer) filter by language ID}

\item{month}{(string) filter by wildcard_attribute on month}

\item{note}{(string) filter by wildcard_attribute on note}

\item{number}{(string) filter by wildcard_attribute on number}

\item{organization}{(string) filter by wildcard_attribute on organization}

\item{pages}{(string) filter by wildcard_attribute on pages}

\item{publisher}{(string) filter by wildcard_attribute on publisher}

\item{school}{(string) filter by wildcard_attribute on school}

\item{series}{(string) filter by wildcard_attribute on series}

\item{stated_year}{(string) filter by wildcard_attribute on stated_year}

\item{translator}{(string) filter by wildcard_attribute on translator}

\item{type}{(string) filter by wildcard_attribute on type}

\item{url}{(string) filter by wildcard_attribute on URL}

\item{verbatim}{(string) filter by wildcard_attribute on verbatim}

\item{verbatim_contents}{(string) filter by wildcard_attribute on verbatim_contents}

\item{verbatim_keywords}{(string) filter by wildcard_attribute on verbatim_keywords}

\item{volume}{(string) filter by wildcard_attribute on volume}

\item{year_suffix}{(string) filter by wildcard_attribute on year_suffix}

\item{token}{(string) a user token (set with the TW_USER_TOKEN environment variable)}

\item{project_token}{(string) a project token (set with the TW_PROJECT_TOKEN environment variable)}

\item{page}{(integer) requested number of offset records (Default: 0)}

\item{per}{(integer) requested number of maximum records to be returned (Default: 50, Maximum: 10000)}

\item{...}{curl options passed on to \code{\link[httr2]{verb-GET}}}

\item{namespace_id}{(integer) filter by namespace ID}

\item{any_value_attribute}{(string, vector) filter by wildcard_attribute (e.g., any of the below fields abstract through year_suffix)}
}
\value{
list
}
\description{
Sources
}
\examples{
\dontrun{
tw_sources(author="Smith")
}
}
